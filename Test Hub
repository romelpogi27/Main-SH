if _G.Enabled == nil then
    _G.Enabled = false
end

if _G.Enabled == true then
    warn("Romel Hub is already running! |", "Failed")
    return
end

if not game:IsLoaded() then
    game.Loaded:Wait()
end

--//Services

local TweenService: TweenService = game:GetService("TweenService")
local Players: Players = game:GetService("Players")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local TextChatService = game:GetService("TextChatService")
local VirtualUser = game:GetService("VirtualUser")
local UserInputService = game:GetService("UserInputService")

--//Variables
local LocalPlayer: Player = Players.LocalPlayer
local Character: Model = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")
local Humanoid = Character:WaitForChild("Humanoid")
local RMouse = LocalPlayer:GetMouse()
local Debounce = false
local pos1 = UDim2.new(1, -20, 1, 0)
local pos2 = UDim2.new(1, -20, 1, 200)
local tween1
local tween2
local TweenToolInfo: TweenInfo = TweenInfo.new(1)

--//Instances

local SkibidiHub: ScreenGui = Instance.new("ScreenGui")
local Holder: TextLabel = Instance.new("TextLabel")
local Frame = Instance.new("Frame")
local TextBox = Instance.new("TextBox")
local ScrollingFrame = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")

--//Important

function randomString()
	local length = math.random(10,20)
	local array = {}
	for i = 1, length do
		array[i] = string.char(math.random(32, 126))
	end
	return table.concat(array)
end

--//Properties

SkibidiHub.Name = randomString()
SkibidiHub.Parent = CoreGui
SkibidiHub.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Frame.Parent = SkibidiHub
Frame.AnchorPoint = Vector2.new(1, 1)
Frame.BackgroundColor3 = Color3.fromRGB(99, 99, 99)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = pos2
Frame.Size = UDim2.new(0, 250, 0, 220)

Holder.Parent = Frame
Holder.BackgroundColor3 = Color3.fromRGB(65, 65, 65)
Holder.BorderColor3 = Color3.fromRGB(0, 0, 0)
Holder.BorderSizePixel = 0
Holder.Size = UDim2.new(0, 250, 0, 23)
Holder.Font = Enum.Font.SourceSans
Holder.Text = "Test Hub V1.0"
Holder.TextColor3 = Color3.fromRGB(0, 0, 0)
Holder.TextScaled = true
Holder.TextSize = 14.000
Holder.TextWrapped = true

TextBox.Parent = Frame
TextBox.BackgroundColor3 = Color3.fromRGB(61, 61, 61)
TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBox.BorderSizePixel = 0
TextBox.Position = UDim2.new(0, 0, 0.105, 0)
TextBox.Size = UDim2.new(0, 250, 0, 24)
TextBox.Font = Enum.Font.SourceSans
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(0, 0, 0)
TextBox.TextSize = 14.000

ScrollingFrame.Parent = Frame
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(38, 38, 38)
ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(0, 0, 0, 48)
ScrollingFrame.Size = UDim2.new(1, 0, 1, 0)
ScrollingFrame.ScrollBarThickness = 0

UIListLayout.Parent = ScrollingFrame
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

tween1 = TweenService:Create(Frame, TweenInfo.new(0.5), { Position = pos1 })
tween2 = TweenService:Create(Frame, TweenInfo.new(0.5), { Position = pos2 })

--// Command System

local cmds = {}
local lists = {}

function addcmd(name, alias, func, plugin)
    cmds[#cmds + 1] = {
        NAME = name:lower(),
        ALIAS = alias or {},
        FUNC = func,
        PLUGIN = plugin
    }
end

function executeCommand(input)
    local args = string.split(input, " ")
    local lowerInput = args[1]:lower()
    table.remove(args, 1)

    for _, cmd in ipairs(cmds) do
        if cmd.NAME == lowerInput or table.find(cmd.ALIAS, lowerInput) then
            cmd.FUNC(unpack(args))
            print(cmd.NAME .. " executed!", "Args:", table.concat(args, ", "))
            return
        end 
    end

    warn("Command not found:", input)
end

--// Commands

addcmd("deleteselectedtool", {"dst"}, function()
    for i, v in pairs(Character:GetDescendants()) do
        if v:IsA("Tool") or v:IsA("HopperBin") then
            v:Destroy()
        end
    end
end)

addcmd("tweentool", {"tt"}, function()
    local Tool = Instance.new("Tool")
    Tool.RequiresHandle = false
    Tool.Name = "TweenTool"
    Tool.Parent = Character

    Tool.Activated:Connect(function()
        if Debounce then return end
        Debounce = true

        local Mouse = RMouse
        local MousePos = Mouse.Hit.Position + Vector3.new(0, 2.5, 0)

        HumanoidRootPart.Anchored = true

        local Tween = TweenService:Create(HumanoidRootPart, TweenToolInfo, { CFrame = CFrame.new(MousePos) })
        Tween:Play()

        Tween.Completed:Connect(function()
            Debounce = false
            HumanoidRootPart.Anchored = false
        end)
    end)
end)

addcmd("rejoin", {"rj"}, function()
	if #Players:GetPlayers() <= 1 then
		Players.LocalPlayer:Kick("\nRejoining...")
		wait()
		TeleportService:Teleport(game.PlaceId, Players.LocalPlayer)
	else
		TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, Players.LocalPlayer)
	end
end)

addcmd("serverhop", {"sh"}, function()
    TeleportService:Teleport(game.PlaceId)
end)

addcmd("antiafk", {"aa"}, function()
    LocalPlayer.Idled:Connect(function()
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new(0, 0))
    end)
end)

addcmd("highlightall", {"ha"}, function()
    local highlightActive = false

    if not highlightActive then
        highlightActive = true
        for _, player in pairs(Players:GetPlayers()) do
            if player.Character then
                local highlightExists = player.Character:FindFirstChild("H")
                if not highlightExists then
                    local Highlight = Instance.new("Highlight")
                    Highlight.Name = "H"
                    Highlight.Parent = player.Character
                    Highlight.FillTransparency = 0.5
                    Highlight.OutlineTransparency = 0
                    Highlight.Enabled = true
                end
            end
        end
    else
        highlightActive = false
        for _, v in pairs(workspace:GetDescendants()) do
            if v:IsA("Model") then
                if v:FindFirstChild("H") then
                    v.H:Destroy()
                end
            end
        end
    end
end)

addcmd("bringallpart", {"baa"}, function()
    for _, v in pairs(workspace:GetDescendants()) do
        if v:IsA("BasePart") and v.Anchored == false then
            local tween = TweenService:Create(v, TweenToolInfo, { CFrame = HumanoidRootPart.CFrame })
            tween:Play()
        end
    end
end)

addcmd("exit", {}, function()
    game:Shutdown()
end)

addcmd("tweeninfo", {"ti"}, function(speed)
    local num = tonumber(speed)

    TweenToolInfo = TweenInfo.new(num)
end)

addcmd("print", {}, function(...)
    print("Print Command Output:", ...)
end)

addcmd("god", {}, function()
    Humanoid.MaxHealth = math.huge
    Humanoid.Health = math.huge
    print("You are now invincible!")
end)

addcmd("freezeall", {"fa"}, function()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.Anchored = true
        end
    end
end)

addcmd("unfreezeall", {"ufa"}, function()
    for _, player in pairs(Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.Anchored = false
        end
    end
end)

addcmd("walkspeed", {"ws"}, function(speed)
    local speedNumber = tonumber(speed) or 16
    Humanoid.WalkSpeed = speedNumber
    print("Walkspeed set to:", speedNumber)
end)

addcmd("jumppower", {"jp"}, function(power)
    local powerNumber = tonumber(power) or 50
    Humanoid.JumpPower = powerNumber
    print("JumpPower set to:", powerNumber)
end)

addcmd("teleport", {"tp"}, function(args)
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name:lower() == args:lower() or player.DisplayName:lower() == args:lower() and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame
            print("Teleported to:", player.Name)
            return
        elseif args:lower() == string.lower("random") and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local availablePlayers = Players:GetPlayers()
            table.remove(availablePlayers, table.find(availablePlayers, LocalPlayer))

            if #availablePlayers > 0 then
                local randomPlayer = availablePlayers[math.random(1, #availablePlayers)]
                if randomPlayer.Character and randomPlayer.Character:FindFirstChild("HumanoidRootPart") then
                   HumanoidRootPart.CFrame = randomPlayer.Character.HumanoidRootPart.CFrame
                   print("Teleported to:", randomPlayer.Name)
                   return
                end
            end
        print("No valid players to teleport to.")
        return
        end
    end

    print("Player not found:", args)
end)

addcmd("hitboxall", {"hba"}, function(size)
    local hitboxSize = tonumber(size) or 2
    for _, player in pairs(Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.Name ~= Character.Name then
            local humanoidRootPart = player.Character.HumanoidRootPart
            humanoidRootPart.Size = Vector3.new(hitboxSize, hitboxSize, hitboxSize)
            humanoidRootPart.Transparency = 0.5
            humanoidRootPart.Material = Enum.Material.Neon
            humanoidRootPart.CanCollide = false
        end
    end
    print("Hitboxes increased to size:", hitboxSize)
end)

addcmd("dex", {}, function()
    TextBox.Text = ""
    loadstring(game:HttpGet('https://raw.githubusercontent.com/MassiveHubs/loadstring/refs/heads/main/DexXenoAndRezware'))()   
end)

local autojump

addcmd("autojump", {}, function()
    Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)

    autojump = task.spawn(function()
        while task.wait(0.6) do
            Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end)
end)

addcmd("unautojump", {}, function()
    if autojump then
        task.cancel(autojump)
        autojump = nil
    end
end)

addcmd("antikickmethod", {"akm"}, function(method)
    if method == "1" then
        local old
        old = hookmetamethod(game, "__namecall", function(self, ...)
            local method = tostring(getnamecallmethod())
            if string.lower(method) == "kick" then
                warn("Kick Blocked.")
                return nil
            end
            return old(self, ...)
        end)

        warn("Anti Kick Method 1 Initialized.")
    elseif method == "2" then
        local registry = getreg()
        for _, v in next, registry do
            if type(v) == 'function' then
                local funcinfo = getinfo(v)
                if funcinfo.name == 'kick' then
                    hookfunction(funcinfo.func,function(...) return nil end)
                    print("hooked")
                end
            end
        end

        warn("Anti Kick Method 2 Initialized.")
    else
        warn("No Anti Kick Method Found For The Method You Provided.")
    end
end)

local look

addcmd("lookat", {}, function(playerName, speed)
    if look then
        task.cancel(look)
        look = nil
    end

    local targetPlayer = nil
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name:lower() == playerName:lower() then
            targetPlayer = player
        elseif player.DisplayName:lower() == playerName:lower() then
            targetPlayer = player
        end
    end

    if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        warn("Player not found or invalid: ", playerName)
        return
    end

    local targetHumanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")

    look = task.spawn(function()
        while task.wait(speed) or 0.3 do
            if not targetPlayer.Character or not targetHumanoidRootPart or not targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                warn("Target player or HumanoidRootPart is missing, stopping lookat.")
                look:Disconnect()
                look = nil
                return
            end
            
            local targetPosition = targetHumanoidRootPart.Position
            local currentPosition = HumanoidRootPart.Position
            
            local adjustedTargetPosition = Vector3.new(targetPosition.X, currentPosition.Y, targetPosition.Z)
            HumanoidRootPart.CFrame = CFrame.lookAt(currentPosition, adjustedTargetPosition)
        end
    end)

    print("Now looking at:", playerName)
end)

addcmd("unlookat", {"unla"}, function()
    if look then
        task.cancel(look)
    end
end)

local A

addcmd("float", {"platform"}, function()
    for _, v in pairs(workspace:GetChildren()) do
        if v.Name == "randomfloor" then
            v:Destroy()
        end
    end

    local startY = HumanoidRootPart.Position.Y
    local floor = Instance.new("Part")
    floor.Name = "randomfloor"
    floor.Size = Vector3.new(5, 1, 5)
    floor.Position = Vector3.new(HumanoidRootPart.Position.X, HumanoidRootPart.Position.Y - 4, HumanoidRootPart.Position.Z)
    floor.Anchored = true
    floor.Material = Enum.Material.SmoothPlastic
    floor.BrickColor = BrickColor.new("Dark stone grey")
    floor.Parent = workspace

    A = task.spawn(function()
        while task.wait() do
            local newPosition = HumanoidRootPart.CFrame.Position

            floor.Position = Vector3.new(newPosition.X, startY - 4, newPosition.Z)
        end
    end)
end)

addcmd("unfloat", {"unplatform"}, function()
    if A then
        task.cancel(A)

        for _, v in pairs(workspace:GetChildren()) do
            if v.Name == "randomfloor" then
                v:Destroy()
            end
        end
    end
end)

addcmd("rspy", {"rs"}, function()
    TextBox.Text = ""
    loadstring(game:HttpGet('https://raw.githubusercontent.com/exxtremestuffs/SimpleSpySource/refs/heads/master/SimpleSpy.lua'))()
end)

addcmd("unc", {}, function()
    TextBox.Text = ""
    loadstring(game:HttpGet("https://github.com/ltseverydayyou/uuuuuuu/blob/main/UNC%20test?raw=true"))()
end)

addcmd("chat", {}, function(...: string)
    local message = table.concat({...}, " ")
    TextChatService.TextChannels:WaitForChild("RBXGeneral"):SendAsync(message)
end)

local spin

addcmd("spin", {}, function(speed)
    if spin then
        task.cancel(spin)
    end

    spin = task.spawn(function()
        while task.wait() do
            local a = speed or 3

            HumanoidRootPart.CFrame = HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(a), 0)
        end
    end)
end)

addcmd("unspin", {}, function()
    if spin then
        task.cancel(spin)
    end
end)

local Noclip = nil
local Clip = nil

addcmd("noclip", {}, function()
    Clip = false

	if Clip == false and Players.LocalPlayer.Character ~= nil then
        for _,v in pairs(Players.LocalPlayer.Character:GetDescendants()) do
            if v:IsA('BasePart') and v.CanCollide then
                v.CanCollide = false
            end
        end
    end
    wait(0.21)
end)

addcmd("clip", {}, function()
    if Noclip then Noclip:Disconnect() end
	Clip = true
end)

addcmd("assemblyjump", {"asj"}, function(amt)
    if Humanoid:GetState() ~= Enum.HumanoidStateType.Freefall and Humanoid:GetState() ~= Enum.HumanoidStateType.Climbing then
        HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(0, amt / 2, 0)
    end
end)

--//Labels

lists[#lists + 1] = {NAME = 'DeleteSelectedTool / Dst', DESC = 'Deletes Your Currently Holding Tool'}
lists[#lists + 1] = {NAME = 'TweenTool / Tt', DESC = 'Gives A Tool That Tweens Yoour Character To Your Mouse Position'}
lists[#lists + 1] = {NAME = 'Rejoin / Rj', DESC = 'Rejoins the same server'}
lists[#lists + 1] = {NAME = 'Serverhop / Sh', DESC = 'Hops onto the same game but different server'}
lists[#lists + 1] = {NAME = 'AntiAfk / Aa', DESC = 'Prevents being kicked from being afk'}
lists[#lists + 1] = {NAME = 'BringAllPart / Baa', DESC = 'Brings all unanchored parts to you'}
lists[#lists + 1] = {NAME = "TweenInfo / Ti [Number]", DESC = "Sets the TweenInfo time (Usage: tweeninfo <number>)"}
lists[#lists + 1] = {NAME = "Print [String]", DESC = "Prints text to the output (Usage: print <text>)"}
lists[#lists + 1] = {NAME = "God", DESC = "Enables invincibility"}
lists[#lists + 1] = {NAME = "FreezeAll / Fa", DESC = "Freezes all players except you"}
lists[#lists + 1] = {NAME = "UnfreezeAll / Ufa", DESC = "Unfreezes all frozen players"}
lists[#lists + 1] = {NAME = "WalkSpeed / Ws [Number]", DESC = "Sets your walkspeed (Usage: walkspeed <number>)"}
lists[#lists + 1] = {NAME = "JumpPower / Jp [Number]", DESC = "Sets your jump power (Usage: jumppower <number>)"}
lists[#lists + 1] = {NAME = "Teleport / Tp", DESC = "Teleports you to a player (Usage: teleport <playerName>)"}
lists[#lists + 1] = {NAME = "HitboxAll / Hba [Number]", DESC = "Increases all players' hitboxes (Usage: hitboxall <size>)"}
lists[#lists + 1] = {NAME = "Dex", DESC = "Opens Dex Explorer"}
lists[#lists + 1] = {NAME = "AutoJump / Aj", DESC = "Makes Your Humanoid Auto Jump"}
lists[#lists + 1] = {NAME = "UnAutoJump", DESC = "Disconnects AutoJump"}
lists[#lists + 1] = {NAME = "AntiKickMethod / Akm [Number]", DESC = "Makes You Unable To Be Kicked By Any Local Script Kick (Usage: AntiKickMethod <Method>)"}
lists[#lists + 1] = {NAME = "Reload (NOT WORKING)", DESC = "Reloads The Script Hub"}
lists[#lists + 1] = {NAME = "LookAt / La", DESC = "Looks At The Player Given"}
lists[#lists + 1] = {NAME = "UnLookAt / Ula ", DESC = "Stops The Look At Script"}
lists[#lists + 1] = {NAME = "Float / Platform", DESC = "Creates A Platform Under You To Float On"}
lists[#lists + 1] = {NAME = "UnFloat / UnPlatform", DESC = "Removes The Platform From The Float Command"}
lists[#lists + 1] = {NAME = "Rspy / Rs", DESC = "Opens Remote Spy"}
lists[#lists + 1] = {NAME = "Teleport / Tp", DESC = "Teleports To A Player (Usage: Tp <Name>)"}
lists[#lists + 1] = {NAME = "UNC", DESC = "UNC Test"}
lists[#lists + 1] = {NAME = "Chat [String]", DESC = "Chats The Provided Text"}
lists[#lists + 1] = {NAME = "Spin [Number]", DESC = "Spins Your Character With The Provided Speed"}
lists[#lists + 1] = {NAME = "UnSpin", DESC = "Stops The Spin Command"}
lists[#lists + 1] = {NAME = "AssemblyJump / Asj [Number]", DESC = "Jumps You At Given Y Using Assembly Linear Velocity"}

--//Label Adder

function createLabel(name: string, desc: string)
    local co
    local label: TextLabel = Instance.new("TextLabel")

    label.Name = randomString()
    label.Parent = ScrollingFrame
    label.BackgroundTransparency = 1
    label.BorderColor3 = Color3.fromRGB(0, 0, 0)
    label.BorderSizePixel = 0
    label.Size = UDim2.new(0, 250, 0, 23)
    label.Font = Enum.Font.SourceSans
    label.Text = name
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextSize = 14.000
    label.TextScaled = true
    label.TextXAlignment = Enum.TextXAlignment.Left
    
    local tooltip = Instance.new("TextLabel")
    tooltip.Name = randomString()
    tooltip.Parent = Frame
    tooltip.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    tooltip.BorderSizePixel = 0
    tooltip.Size = UDim2.new(0, 200, 0, 50)
    tooltip.Position = UDim2.new(0, RMouse.X, 0, RMouse.Y)
    tooltip.Visible = false
    tooltip.Font = Enum.Font.SourceSans
    tooltip.Text = desc
    tooltip.TextColor3 = Color3.fromRGB(255, 255, 255)
    tooltip.TextSize = 12
    tooltip.TextWrapped = true
    tooltip.TextScaled = true

    ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, #lists * (label.Size.Y.Offset * 1.1))

    label.MouseEnter:Connect(function()
        tooltip.Visible = true

        local xp = Frame.AbsolutePosition.X + 200
        local yp = Frame.AbsolutePosition.Y + 50

        co = task.spawn(function()
            if tooltip.Visible then
                while task.wait() do
                    tooltip.Position = UDim2.new(
                     0, RMouse.X - xp,
                     0, RMouse.Y - yp
                )
                end
            end
        end)
    end)
    label.MouseLeave:Connect(function()
        tooltip.Visible = false
        if co then
            task.cancel(co)
        end
    end)
end

for _, v in ipairs(lists) do
    createLabel(v.NAME, v.DESC)
end

--//Handlers

TextBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        executeCommand(TextBox.Text)
        task.wait()
        tween2:Play()
        TextBox.Text = ""
    end
end)

UserInputService.InputBegan:Connect(function(i, b)
	if b then return end

	if i.KeyCode == Enum.KeyCode.Semicolon then
		TextBox:CaptureFocus()
        task.wait()
        tween1:Play()
		TextBox.Text = ""
	end
end)

function Enter()
    if Frame.Position ~= pos1 then
        tween1:Play()
    end
end

function Leave()
    if Frame.Position ~= pos2 then
        tween2:Play()
    end
end

Frame.MouseEnter:Connect(function()
    Enter()
end)

Frame.MouseLeave:Connect(function()
    Leave()
end)

function FindText()
    local text: string = TextBox.Text:lower()
    local children = ScrollingFrame:GetChildren()

    for _, child in ipairs(children) do
        if child:IsA("TextLabel") then
            child.Visible = false
            local labelText: string = child.Text:lower()
            if labelText:find(text, 1, true) then 
                child.Visible = true
            end
        end
    end
end

TextBox:GetPropertyChangedSignal("Text"):Connect(FindText)

_G.Enabled = true
print("Success")
